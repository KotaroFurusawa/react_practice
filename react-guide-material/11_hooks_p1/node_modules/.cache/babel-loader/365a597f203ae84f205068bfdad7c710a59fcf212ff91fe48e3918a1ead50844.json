{"ast":null,"code":"var _jsxFileName = \"/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/11_hooks_p1/src/070_practice_useContext/start/context/CalcContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useReducer, createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalcContext = /*#__PURE__*/createContext();\nconst CalcDispatchContext = /*#__PURE__*/createContext();\nconst reducer = (state, _ref) => {\n  let {\n    type,\n    payload\n  } = _ref;\n  switch (type) {\n    case \"change\":\n      {\n        const {\n          name,\n          value\n        } = payload;\n        return {\n          ...state,\n          [name]: value\n        };\n      }\n    case \"add\":\n      {\n        return {\n          ...state,\n          result: state.a + state.b\n        };\n      }\n    case \"minus\":\n      {\n        return {\n          ...state,\n          result: state.a - state.b\n        };\n      }\n    case \"divide\":\n      {\n        return {\n          ...state,\n          result: state.a / state.b\n        };\n      }\n    case \"multiply\":\n      {\n        return {\n          ...state,\n          result: state.a * state.b\n        };\n      }\n    default:\n      throw new Error(\"operator is invalid\");\n  }\n};\nexport const CalcProvider = _ref2 => {\n  _s();\n  let {\n    children\n  } = _ref2;\n  const initState = {\n    a: 1,\n    b: 2,\n    result: 3\n  };\n  const [state, dispatch] = useReducer(reducer, initState);\n  /*#__PURE__*/_jsxDEV(CalcContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(CalcDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(CalcProvider, \"ivzsx5aR9qRFuEtyOcndflQiQ1Q=\");\n_c = CalcProvider;\nexport const useState = () => {\n  _s2();\n  return useContext(CalcContext);\n};\n_s2(useState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useDispatch = () => {\n  _s3();\n  return useContext(CalcDispatchContext);\n};\n_s3(useDispatch, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CalcProvider\");","map":{"version":3,"names":["useReducer","createContext","useContext","CalcContext","CalcDispatchContext","reducer","state","type","payload","name","value","result","a","b","Error","CalcProvider","children","initState","dispatch","useState","useDispatch"],"sources":["/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/11_hooks_p1/src/070_practice_useContext/start/context/CalcContext.js"],"sourcesContent":["import {useReducer,createContext,useContext} from 'react';\n\nconst CalcContext = createContext();\nconst CalcDispatchContext = createContext();\n\nconst reducer = (state, { type, payload }) => {\n    switch (type) {\n      case \"change\": {\n        const { name, value } = payload;\n        return { ...state, [name]: value };\n      }\n      case \"add\": {\n        return { ...state, result: state.a + state.b };\n      }\n      case \"minus\": {\n        return { ...state, result: state.a - state.b };\n      }\n      case \"divide\": {\n        return { ...state, result: state.a / state.b };\n      }\n      case \"multiply\": {\n        return { ...state, result: state.a * state.b };\n      }\n      default:\n        throw new Error(\"operator is invalid\");\n    }\n  };\n\nexport const CalcProvider = ({children}) => {\n    const initState = {\n        a: 1,\n        b: 2,\n        result: 3,\n    };\n    \n    const [state, dispatch] = useReducer(reducer, initState);\n    <CalcContext.Provider value={state}>\n        <CalcDispatchContext.Provider value={dispatch}>\n            {children}\n        </CalcDispatchContext.Provider>\n    </CalcContext.Provider>\n}\n\nexport const useState = () => useContext(CalcContext);\nexport const useDispatch = () => useContext(CalcDispatchContext);"],"mappings":";;;;AAAA,SAAQA,UAAU,EAACC,aAAa,EAACC,UAAU,QAAO,OAAO;AAAC;AAE1D,MAAMC,WAAW,gBAAGF,aAAa,EAAE;AACnC,MAAMG,mBAAmB,gBAAGH,aAAa,EAAE;AAE3C,MAAMI,OAAO,GAAG,CAACC,KAAK,WAAwB;EAAA,IAAtB;IAAEC,IAAI;IAAEC;EAAQ,CAAC;EACrC,QAAQD,IAAI;IACV,KAAK,QAAQ;MAAE;QACb,MAAM;UAAEE,IAAI;UAAEC;QAAM,CAAC,GAAGF,OAAO;QAC/B,OAAO;UAAE,GAAGF,KAAK;UAAE,CAACG,IAAI,GAAGC;QAAM,CAAC;MACpC;IACA,KAAK,KAAK;MAAE;QACV,OAAO;UAAE,GAAGJ,KAAK;UAAEK,MAAM,EAAEL,KAAK,CAACM,CAAC,GAAGN,KAAK,CAACO;QAAE,CAAC;MAChD;IACA,KAAK,OAAO;MAAE;QACZ,OAAO;UAAE,GAAGP,KAAK;UAAEK,MAAM,EAAEL,KAAK,CAACM,CAAC,GAAGN,KAAK,CAACO;QAAE,CAAC;MAChD;IACA,KAAK,QAAQ;MAAE;QACb,OAAO;UAAE,GAAGP,KAAK;UAAEK,MAAM,EAAEL,KAAK,CAACM,CAAC,GAAGN,KAAK,CAACO;QAAE,CAAC;MAChD;IACA,KAAK,UAAU;MAAE;QACf,OAAO;UAAE,GAAGP,KAAK;UAAEK,MAAM,EAAEL,KAAK,CAACM,CAAC,GAAGN,KAAK,CAACO;QAAE,CAAC;MAChD;IACA;MACE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EAAC;AAE7C,CAAC;AAEH,OAAO,MAAMC,YAAY,GAAG,SAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EACnC,MAAMC,SAAS,GAAG;IACdL,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJF,MAAM,EAAE;EACZ,CAAC;EAED,MAAM,CAACL,KAAK,EAAEY,QAAQ,CAAC,GAAGlB,UAAU,CAACK,OAAO,EAAEY,SAAS,CAAC;EACxD,qBAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEX,KAAM;IAAA,uBAC/B,QAAC,mBAAmB,CAAC,QAAQ;MAAC,KAAK,EAAEY,QAAS;MAAA,UACzCF;IAAQ;MAAA;MAAA;MAAA;IAAA;EACkB;IAAA;IAAA;IAAA;EAAA,QACZ;AAC3B,CAAC;AAAA,GAbYD,YAAY;AAAA,KAAZA,YAAY;AAezB,OAAO,MAAMI,QAAQ,GAAG;EAAA;EAAA,OAAMjB,UAAU,CAACC,WAAW,CAAC;AAAA;AAAC,IAAzCgB,QAAQ;AACrB,OAAO,MAAMC,WAAW,GAAG;EAAA;EAAA,OAAMlB,UAAU,CAACE,mBAAmB,CAAC;AAAA;AAAC,IAApDgB,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}