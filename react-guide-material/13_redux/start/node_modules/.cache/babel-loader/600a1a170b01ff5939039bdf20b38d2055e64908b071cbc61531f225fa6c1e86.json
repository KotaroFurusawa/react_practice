{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { asyncCount } from \"../../api/counter\";\nconst counter = createSlice({\n  name: 'counter',\n  initialState: {\n    count: 0,\n    status: ''\n  },\n  reducers: {\n    add(state, _ref) {\n      let {\n        type,\n        payload\n      } = _ref;\n      state.count = state.count + payload;\n      // const newState = { ...state };\n      // newState.count = state.count + payload\n      // return newState;\n    },\n\n    minus(state, _ref2) {\n      let {\n        type,\n        payload\n      } = _ref2;\n      state.count = state.count - payload;\n      // const newState = { ...state };\n      // newState.count = state.count - payload\n      // return newState;\n    }\n  },\n\n  extraReducers: builder => {\n    builder.addCase(addAsyncWithStatus.pending, state => {\n      //pendingは「読み込み中」という状態\n      state.status = 'Loading...';\n    }).addCase(addAsyncWithStatus.fulfilled, state => {\n      //fulfilledは完了の状態\n      state.status = '取得済み';\n    }).addCase(addAsyncWithStatus.rejected, state => {\n      state.status = 'エラー';\n    });\n  }\n});\nconst {\n  add,\n  minus\n} = counter.actions;\nconst addAsyncWithStatus = createAsyncThunk('counter/asyncCount', async payload => {\n  const response = await asyncCount(payload);\n  return response.data;\n});\nconst addAsync = payload => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    console.log(state);\n    const response = await asyncCount(payload);\n    dispatch(add(response.data));\n  };\n};\nexport { add, minus, addAsync };\nexport default counter.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","asyncCount","counter","name","initialState","count","status","reducers","add","state","type","payload","minus","extraReducers","builder","addCase","addAsyncWithStatus","pending","fulfilled","rejected","actions","response","data","addAsync","dispatch","getState","console","log","reducer"],"sources":["/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/13_redux/start/src/060_createAsyncThunk/store/modules/counter.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nimport { asyncCount } from \"../../api/counter\"\n\nconst counter = createSlice({\n  name: 'counter',\n  initialState: {\n    count: 0,\n    status: ''\n  },\n  reducers: {\n    add(state, { type, payload }) {\n      state.count = state.count + payload;\n      // const newState = { ...state };\n      // newState.count = state.count + payload\n      // return newState;\n    },\n    minus(state, { type, payload }) {\n      state.count = state.count - payload;\n      // const newState = { ...state };\n      // newState.count = state.count - payload\n      // return newState;\n    }\n  },\n  extraReducers:(builder) => {\n    \n    builder.addCase(addAsyncWithStatus.pending,(state)=>{//pendingは「読み込み中」という状態\n      state.status = 'Loading...'\n    })\n    .addCase(addAsyncWithStatus.fulfilled,(state)=>{//fulfilledは完了の状態\n      state.status = '取得済み'\n    })\n    .addCase(addAsyncWithStatus.rejected,(state)=>{\n      state.status = 'エラー'\n    })\n  }\n});\n\nconst { add, minus } = counter.actions;\n\nconst addAsyncWithStatus = createAsyncThunk(\n  'counter/asyncCount',\n  async (payload) => {\n    const response = await asyncCount(payload);\n    return response.data;\n  }\n)\nconst addAsync = (payload) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    console.log(state);\n    const response = await asyncCount(payload);\n    dispatch(add(response.data));\n  }\n}\n\n\nexport { add, minus, addAsync }\nexport default counter.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,SAASC,UAAU,QAAQ,mBAAmB;AAE9C,MAAMC,OAAO,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,GAAG,CAACC,KAAK,QAAqB;MAAA,IAAnB;QAAEC,IAAI;QAAEC;MAAQ,CAAC;MAC1BF,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,GAAGM,OAAO;MACnC;MACA;MACA;IACF,CAAC;;IACDC,KAAK,CAACH,KAAK,SAAqB;MAAA,IAAnB;QAAEC,IAAI;QAAEC;MAAQ,CAAC;MAC5BF,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,GAAGM,OAAO;MACnC;MACA;MACA;IACF;EACF,CAAC;;EACDE,aAAa,EAAEC,OAAO,IAAK;IAEzBA,OAAO,CAACC,OAAO,CAACC,kBAAkB,CAACC,OAAO,EAAER,KAAK,IAAG;MAAC;MACnDA,KAAK,CAACH,MAAM,GAAG,YAAY;IAC7B,CAAC,CAAC,CACDS,OAAO,CAACC,kBAAkB,CAACE,SAAS,EAAET,KAAK,IAAG;MAAC;MAC9CA,KAAK,CAACH,MAAM,GAAG,MAAM;IACvB,CAAC,CAAC,CACDS,OAAO,CAACC,kBAAkB,CAACG,QAAQ,EAAEV,KAAK,IAAG;MAC5CA,KAAK,CAACH,MAAM,GAAG,KAAK;IACtB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,MAAM;EAAEE,GAAG;EAAEI;AAAM,CAAC,GAAGV,OAAO,CAACkB,OAAO;AAEtC,MAAMJ,kBAAkB,GAAGjB,gBAAgB,CACzC,oBAAoB,EACpB,MAAOY,OAAO,IAAK;EACjB,MAAMU,QAAQ,GAAG,MAAMpB,UAAU,CAACU,OAAO,CAAC;EAC1C,OAAOU,QAAQ,CAACC,IAAI;AACtB,CAAC,CACF;AACD,MAAMC,QAAQ,GAAIZ,OAAO,IAAK;EAC5B,OAAO,OAAOa,QAAQ,EAAEC,QAAQ,KAAK;IACnC,MAAMhB,KAAK,GAAGgB,QAAQ,EAAE;IACxBC,OAAO,CAACC,GAAG,CAAClB,KAAK,CAAC;IAClB,MAAMY,QAAQ,GAAG,MAAMpB,UAAU,CAACU,OAAO,CAAC;IAC1Ca,QAAQ,CAAChB,GAAG,CAACa,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC9B,CAAC;AACH,CAAC;AAGD,SAASd,GAAG,EAAEI,KAAK,EAAEW,QAAQ;AAC7B,eAAerB,OAAO,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}