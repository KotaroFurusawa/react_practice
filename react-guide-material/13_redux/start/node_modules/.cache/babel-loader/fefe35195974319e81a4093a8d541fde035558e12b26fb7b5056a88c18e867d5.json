{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { asyncCount } from \"../../api/counter\";\nconst counter = createSlice({\n  name: 'counter',\n  initialState: {\n    count: 0,\n    status: ''\n  },\n  reducers: {\n    add(state, _ref) {\n      let {\n        type,\n        payload\n      } = _ref;\n      state.count = state.count + payload;\n      // const newState = { ...state };\n      // newState.count = state.count + payload\n      // return newState;\n    },\n\n    minus(state, _ref2) {\n      let {\n        type,\n        payload\n      } = _ref2;\n      state.count = state.count - payload;\n      // const newState = { ...state };\n      // newState.count = state.count - payload\n      // return newState;\n    }\n  }\n});\n\nconst {\n  add,\n  minus\n} = counter.actions;\nconst addAsyncWithStatus = createAsyncThunk('counter/asyncCount', async payload => {\n  const state = getState();\n  console.log(state);\n  const response = await asyncCount(payload);\n  dispatch(add(response.data));\n});\nconst addAsync = payload => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    console.log(state);\n    const response = await asyncCount(payload);\n    dispatch(add(response.data));\n  };\n};\nexport { add, minus, addAsync };\nexport default counter.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","asyncCount","counter","name","initialState","count","status","reducers","add","state","type","payload","minus","actions","addAsyncWithStatus","getState","console","log","response","dispatch","data","addAsync","reducer"],"sources":["/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/13_redux/start/src/060_createAsyncThunk/store/modules/counter.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nimport { asyncCount } from \"../../api/counter\"\n\nconst counter = createSlice({\n  name: 'counter',\n  initialState: {\n    count: 0,\n    status: ''\n  },\n  reducers: {\n    add(state, { type, payload }) {\n      state.count = state.count + payload;\n      // const newState = { ...state };\n      // newState.count = state.count + payload\n      // return newState;\n    },\n    minus(state, { type, payload }) {\n      state.count = state.count - payload;\n      // const newState = { ...state };\n      // newState.count = state.count - payload\n      // return newState;\n    }\n  }\n});\n\nconst { add, minus } = counter.actions;\n\nconst addAsyncWithStatus = createAsyncThunk(\n  'counter/asyncCount',\n  async (payload) => {\n    const state = getState();\n    console.log(state);\n    const response = await asyncCount(payload);\n    dispatch(add(response.data));\n  }\n)\nconst addAsync = (payload) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    console.log(state);\n    const response = await asyncCount(payload);\n    dispatch(add(response.data));\n  }\n}\n\n\nexport { add, minus, addAsync }\nexport default counter.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,SAASC,UAAU,QAAQ,mBAAmB;AAE9C,MAAMC,OAAO,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,GAAG,CAACC,KAAK,QAAqB;MAAA,IAAnB;QAAEC,IAAI;QAAEC;MAAQ,CAAC;MAC1BF,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,GAAGM,OAAO;MACnC;MACA;MACA;IACF,CAAC;;IACDC,KAAK,CAACH,KAAK,SAAqB;MAAA,IAAnB;QAAEC,IAAI;QAAEC;MAAQ,CAAC;MAC5BF,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,GAAGM,OAAO;MACnC;MACA;MACA;IACF;EACF;AACF,CAAC,CAAC;;AAEF,MAAM;EAAEH,GAAG;EAAEI;AAAM,CAAC,GAAGV,OAAO,CAACW,OAAO;AAEtC,MAAMC,kBAAkB,GAAGf,gBAAgB,CACzC,oBAAoB,EACpB,MAAOY,OAAO,IAAK;EACjB,MAAMF,KAAK,GAAGM,QAAQ,EAAE;EACxBC,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;EAClB,MAAMS,QAAQ,GAAG,MAAMjB,UAAU,CAACU,OAAO,CAAC;EAC1CQ,QAAQ,CAACX,GAAG,CAACU,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B,CAAC,CACF;AACD,MAAMC,QAAQ,GAAIV,OAAO,IAAK;EAC5B,OAAO,OAAOQ,QAAQ,EAAEJ,QAAQ,KAAK;IACnC,MAAMN,KAAK,GAAGM,QAAQ,EAAE;IACxBC,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;IAClB,MAAMS,QAAQ,GAAG,MAAMjB,UAAU,CAACU,OAAO,CAAC;IAC1CQ,QAAQ,CAACX,GAAG,CAACU,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC9B,CAAC;AACH,CAAC;AAGD,SAASZ,GAAG,EAAEI,KAAK,EAAES,QAAQ;AAC7B,eAAenB,OAAO,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}