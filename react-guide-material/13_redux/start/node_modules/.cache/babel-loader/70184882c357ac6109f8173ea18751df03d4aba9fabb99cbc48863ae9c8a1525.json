{"ast":null,"code":"const initialState = 0;\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case \"counter/+\":\n      return state + payload;\n    case \"counter/-\":\n      return state - payload;\n    default:\n      return state;\n  }\n};\nconst add = payload => {\n  return {\n    type: \"counter/+\",\n    payload\n  };\n};\nconst minus = payload => {\n  return {\n    type: \"counter/-\",\n    payload\n  };\n};\nexport { reducer, add, minus };","map":{"version":3,"names":["initialState","reducer","state","type","payload","add","minus"],"sources":["/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/13_redux/start/src/030_redux_toolkit/store/modules/counter.js"],"sourcesContent":["const initialState = 0;\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case \"counter/+\":\n      return state + payload;\n    case \"counter/-\":\n      return state - payload;\n    default:\n      return state;\n  }\n};\n\nconst add = (payload) => {\n    return {\n        type: \"counter/+\",\n        payload\n    }\n}\n\nconst minus = (payload) => {\n    return {\n        type: \"counter/-\",\n        payload\n    }\n}\n\nexport { reducer, add, minus }"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CAAC;AAEtB,MAAMC,OAAO,GAAG,YAA6C;EAAA,IAA5CC,KAAK,uEAAGF,YAAY;EAAA,IAAE;IAAEG,IAAI;IAAEC;EAAQ,CAAC;EACtD,QAAQD,IAAI;IACV,KAAK,WAAW;MACd,OAAOD,KAAK,GAAGE,OAAO;IACxB,KAAK,WAAW;MACd,OAAOF,KAAK,GAAGE,OAAO;IACxB;MACE,OAAOF,KAAK;EAAC;AAEnB,CAAC;AAED,MAAMG,GAAG,GAAID,OAAO,IAAK;EACrB,OAAO;IACHD,IAAI,EAAE,WAAW;IACjBC;EACJ,CAAC;AACL,CAAC;AAED,MAAME,KAAK,GAAIF,OAAO,IAAK;EACvB,OAAO;IACHD,IAAI,EAAE,WAAW;IACjBC;EACJ,CAAC;AACL,CAAC;AAED,SAASH,OAAO,EAAEI,GAAG,EAAEC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}