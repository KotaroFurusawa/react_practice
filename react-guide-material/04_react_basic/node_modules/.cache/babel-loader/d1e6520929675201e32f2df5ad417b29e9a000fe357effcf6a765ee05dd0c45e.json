{"ast":null,"code":"var _jsxFileName = \"/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/04_react_basic/src/087_practice_expr/start/Example.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst title = 'Expression';\nconst array = ['item1', 'item2', 'item3'];\nconst fn = arg => {\n  return `${arg} Function`;\n};\nconst upperCaseText = 'UpperCaseText';\nconst Example = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Hello JSX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: upperCaseText.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Hello \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"array\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: fn('Hello')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["title","array","fn","arg","upperCaseText","Example","toUpperCase"],"sources":["/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/04_react_basic/src/087_practice_expr/start/Example.js"],"sourcesContent":["const title = 'Expression';\nconst array = ['item1', 'item2', 'item3'];\nconst fn = (arg) => {\n  return `${arg} Function`;\n};\nconst upperCaseText = 'UpperCaseText';\n\nconst Example = () => {\n  return (\n    <>\n      <h3>Hello JSX</h3>\n      <h3>{upperCaseText.toUpperCase()}</h3>\n      <h3>Hello {title}</h3>\n      <h3>array</h3>\n      <h3>{fn('Hello')}</h3>\n      <h3></h3>\n    </>\n  );\n};\n\nexport default Example;\n"],"mappings":";;;AAAA,MAAMA,KAAK,GAAG,YAAY;AAC1B,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;AACzC,MAAMC,EAAE,GAAIC,GAAG,IAAK;EAClB,OAAQ,GAAEA,GAAI,WAAU;AAC1B,CAAC;AACD,MAAMC,aAAa,GAAG,eAAe;AAErC,MAAMC,OAAO,GAAG,MAAM;EACpB,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAClB;MAAA,UAAKD,aAAa,CAACE,WAAW;IAAE;MAAA;MAAA;MAAA;IAAA,QAAM,eACtC;MAAA,qBAAWN,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACd;MAAA,UAAKE,EAAE,CAAC,OAAO;IAAC;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBACR;AAEP,CAAC;AAAC,KAXIG,OAAO;AAab,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}