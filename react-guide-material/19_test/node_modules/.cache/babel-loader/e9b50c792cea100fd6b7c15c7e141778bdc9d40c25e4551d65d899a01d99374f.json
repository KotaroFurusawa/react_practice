{"ast":null,"code":"import '../utils/click/isClickableInput.js';\nimport { writeDataTransferToClipboard } from '../utils/dataTransfer/Clipboard.js';\nimport '../utils/edit/isEditable.js';\nimport '../utils/edit/maxLength.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../utils/keyDef/readNextDescriptor.js';\nimport '../utils/misc/level.js';\nimport '../options.js';\nimport { copySelection } from '../document/copySelection.js';\nasync function cut() {\n  const doc = this.config.document;\n  var _activeElement;\n  const target = (_activeElement = doc.activeElement) !== null && _activeElement !== void 0 ? _activeElement : /* istanbul ignore next */doc.body;\n  const clipboardData = copySelection(target);\n  if (clipboardData.items.length === 0) {\n    return;\n  }\n  if (this.dispatchUIEvent(target, 'cut', {\n    clipboardData\n  }) && this.config.writeToClipboard) {\n    await writeDataTransferToClipboard(target.ownerDocument, clipboardData);\n  }\n  return clipboardData;\n}\nexport { cut };","map":{"version":3,"names":["writeDataTransferToClipboard","copySelection","cut","doc","config","document","_activeElement","target","activeElement","body","clipboardData","items","length","dispatchUIEvent","writeToClipboard","ownerDocument"],"sources":["/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/19_test/node_modules/@testing-library/user-event/dist/esm/clipboard/cut.js"],"sourcesContent":["import '../utils/click/isClickableInput.js';\nimport { writeDataTransferToClipboard } from '../utils/dataTransfer/Clipboard.js';\nimport '../utils/edit/isEditable.js';\nimport '../utils/edit/maxLength.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../utils/keyDef/readNextDescriptor.js';\nimport '../utils/misc/level.js';\nimport '../options.js';\nimport { copySelection } from '../document/copySelection.js';\n\nasync function cut() {\n    const doc = this.config.document;\n    var _activeElement;\n    const target = (_activeElement = doc.activeElement) !== null && _activeElement !== void 0 ? _activeElement : /* istanbul ignore next */ doc.body;\n    const clipboardData = copySelection(target);\n    if (clipboardData.items.length === 0) {\n        return;\n    }\n    if (this.dispatchUIEvent(target, 'cut', {\n        clipboardData\n    }) && this.config.writeToClipboard) {\n        await writeDataTransferToClipboard(target.ownerDocument, clipboardData);\n    }\n    return clipboardData;\n}\n\nexport { cut };\n"],"mappings":"AAAA,OAAO,oCAAoC;AAC3C,SAASA,4BAA4B,QAAQ,oCAAoC;AACjF,OAAO,6BAA6B;AACpC,OAAO,4BAA4B;AACnC,OAAO,sCAAsC;AAC7C,OAAO,uCAAuC;AAC9C,OAAO,wBAAwB;AAC/B,OAAO,eAAe;AACtB,SAASC,aAAa,QAAQ,8BAA8B;AAE5D,eAAeC,GAAG,GAAG;EACjB,MAAMC,GAAG,GAAG,IAAI,CAACC,MAAM,CAACC,QAAQ;EAChC,IAAIC,cAAc;EAClB,MAAMC,MAAM,GAAG,CAACD,cAAc,GAAGH,GAAG,CAACK,aAAa,MAAM,IAAI,IAAIF,cAAc,KAAK,KAAK,CAAC,GAAGA,cAAc,GAAG,0BAA2BH,GAAG,CAACM,IAAI;EAChJ,MAAMC,aAAa,GAAGT,aAAa,CAACM,MAAM,CAAC;EAC3C,IAAIG,aAAa,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAClC;EACJ;EACA,IAAI,IAAI,CAACC,eAAe,CAACN,MAAM,EAAE,KAAK,EAAE;IACpCG;EACJ,CAAC,CAAC,IAAI,IAAI,CAACN,MAAM,CAACU,gBAAgB,EAAE;IAChC,MAAMd,4BAA4B,CAACO,MAAM,CAACQ,aAAa,EAAEL,aAAa,CAAC;EAC3E;EACA,OAAOA,aAAa;AACxB;AAEA,SAASR,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}