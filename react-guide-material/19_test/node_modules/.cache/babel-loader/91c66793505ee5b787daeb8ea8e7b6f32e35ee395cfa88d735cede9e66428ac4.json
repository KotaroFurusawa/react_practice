{"ast":null,"code":"import { getUIValue, setUISelection } from '../../document/UI.js';\nimport { getValueOrTextContent } from '../../document/getValueOrTextContent.js';\nimport '../../utils/click/isClickableInput.js';\nimport '../../utils/dataTransfer/Clipboard.js';\nimport { isContentEditable } from '../../utils/edit/isContentEditable.js';\nimport { isEditable } from '../../utils/edit/isEditable.js';\nimport '../../utils/edit/maxLength.js';\nimport { isElementType } from '../../utils/misc/isElementType.js';\nimport { getTabDestination } from '../../utils/focus/getTabDestination.js';\nimport { hasOwnSelection } from '../../utils/focus/selection.js';\nimport '../../utils/keyDef/readNextDescriptor.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../../utils/misc/level.js';\nimport '../../options.js';\nimport { focusElement } from '../focus.js';\nimport { input } from '../input.js';\nimport { moveSelection } from '../selection/moveSelection.js';\nimport { selectAll } from '../selection/selectAll.js';\nimport { setSelectionRange } from '../selection/setSelectionRange.js';\nimport { walkRadio } from '../radio.js';\nimport { behavior } from './registry.js';\nbehavior.keydown = (event, target, instance) => {\n  var ref;\n  var ref1;\n  return (ref1 = (ref = keydownBehavior[event.key]) === null || ref === void 0 ? void 0 : ref.call(keydownBehavior, event, target, instance)) !== null && ref1 !== void 0 ? ref1 : combinationBehavior(event, target, instance);\n};\nconst keydownBehavior = {\n  ArrowDown: (event, target, instance) => {\n    /* istanbul ignore else */if (isElementType(target, 'input', {\n      type: 'radio'\n    })) {\n      return () => walkRadio(instance, target, -1);\n    }\n  },\n  ArrowLeft: (event, target, instance) => {\n    if (isElementType(target, 'input', {\n      type: 'radio'\n    })) {\n      return () => walkRadio(instance, target, -1);\n    }\n    return () => moveSelection(target, -1);\n  },\n  ArrowRight: (event, target, instance) => {\n    if (isElementType(target, 'input', {\n      type: 'radio'\n    })) {\n      return () => walkRadio(instance, target, 1);\n    }\n    return () => moveSelection(target, 1);\n  },\n  ArrowUp: (event, target, instance) => {\n    /* istanbul ignore else */if (isElementType(target, 'input', {\n      type: 'radio'\n    })) {\n      return () => walkRadio(instance, target, 1);\n    }\n  },\n  Backspace: (event, target, instance) => {\n    if (isEditable(target)) {\n      return () => {\n        input(instance, target, '', 'deleteContentBackward');\n      };\n    }\n  },\n  Delete: (event, target, instance) => {\n    if (isEditable(target)) {\n      return () => {\n        input(instance, target, '', 'deleteContentForward');\n      };\n    }\n  },\n  End: (event, target) => {\n    if (isElementType(target, ['input', 'textarea']) || isContentEditable(target)) {\n      return () => {\n        var ref;\n        var ref1;\n        const newPos = (ref1 = (ref = getValueOrTextContent(target)) === null || ref === void 0 ? void 0 : ref.length) !== null && ref1 !== void 0 ? ref1 : /* istanbul ignore next */0;\n        setSelectionRange(target, newPos, newPos);\n      };\n    }\n  },\n  Home: (event, target) => {\n    if (isElementType(target, ['input', 'textarea']) || isContentEditable(target)) {\n      return () => {\n        setSelectionRange(target, 0, 0);\n      };\n    }\n  },\n  PageDown: (event, target) => {\n    if (isElementType(target, ['input'])) {\n      return () => {\n        const newPos = getUIValue(target).length;\n        setSelectionRange(target, newPos, newPos);\n      };\n    }\n  },\n  PageUp: (event, target) => {\n    if (isElementType(target, ['input'])) {\n      return () => {\n        setSelectionRange(target, 0, 0);\n      };\n    }\n  },\n  Tab: (event, target, instance) => {\n    return () => {\n      const dest = getTabDestination(target, instance.system.keyboard.modifiers.Shift);\n      focusElement(dest);\n      if (hasOwnSelection(dest)) {\n        setUISelection(dest, {\n          anchorOffset: 0,\n          focusOffset: dest.value.length\n        });\n      }\n    };\n  }\n};\nconst combinationBehavior = (event, target, instance) => {\n  if (event.code === 'KeyA' && instance.system.keyboard.modifiers.Control) {\n    return () => selectAll(target);\n  }\n};","map":{"version":3,"names":["getUIValue","setUISelection","getValueOrTextContent","isContentEditable","isEditable","isElementType","getTabDestination","hasOwnSelection","focusElement","input","moveSelection","selectAll","setSelectionRange","walkRadio","behavior","keydown","event","target","instance","ref","ref1","keydownBehavior","key","call","combinationBehavior","ArrowDown","type","ArrowLeft","ArrowRight","ArrowUp","Backspace","Delete","End","newPos","length","Home","PageDown","PageUp","Tab","dest","system","keyboard","modifiers","Shift","anchorOffset","focusOffset","value","code","Control"],"sources":["/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/19_test/node_modules/@testing-library/user-event/dist/esm/event/behavior/keydown.js"],"sourcesContent":["import { getUIValue, setUISelection } from '../../document/UI.js';\nimport { getValueOrTextContent } from '../../document/getValueOrTextContent.js';\nimport '../../utils/click/isClickableInput.js';\nimport '../../utils/dataTransfer/Clipboard.js';\nimport { isContentEditable } from '../../utils/edit/isContentEditable.js';\nimport { isEditable } from '../../utils/edit/isEditable.js';\nimport '../../utils/edit/maxLength.js';\nimport { isElementType } from '../../utils/misc/isElementType.js';\nimport { getTabDestination } from '../../utils/focus/getTabDestination.js';\nimport { hasOwnSelection } from '../../utils/focus/selection.js';\nimport '../../utils/keyDef/readNextDescriptor.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../../utils/misc/level.js';\nimport '../../options.js';\nimport { focusElement } from '../focus.js';\nimport { input } from '../input.js';\nimport { moveSelection } from '../selection/moveSelection.js';\nimport { selectAll } from '../selection/selectAll.js';\nimport { setSelectionRange } from '../selection/setSelectionRange.js';\nimport { walkRadio } from '../radio.js';\nimport { behavior } from './registry.js';\n\nbehavior.keydown = (event, target, instance)=>{\n    var ref;\n    var ref1;\n    return (ref1 = (ref = keydownBehavior[event.key]) === null || ref === void 0 ? void 0 : ref.call(keydownBehavior, event, target, instance)) !== null && ref1 !== void 0 ? ref1 : combinationBehavior(event, target, instance);\n};\nconst keydownBehavior = {\n    ArrowDown: (event, target, instance)=>{\n        /* istanbul ignore else */ if (isElementType(target, 'input', {\n            type: 'radio'\n        })) {\n            return ()=>walkRadio(instance, target, -1);\n        }\n    },\n    ArrowLeft: (event, target, instance)=>{\n        if (isElementType(target, 'input', {\n            type: 'radio'\n        })) {\n            return ()=>walkRadio(instance, target, -1);\n        }\n        return ()=>moveSelection(target, -1);\n    },\n    ArrowRight: (event, target, instance)=>{\n        if (isElementType(target, 'input', {\n            type: 'radio'\n        })) {\n            return ()=>walkRadio(instance, target, 1);\n        }\n        return ()=>moveSelection(target, 1);\n    },\n    ArrowUp: (event, target, instance)=>{\n        /* istanbul ignore else */ if (isElementType(target, 'input', {\n            type: 'radio'\n        })) {\n            return ()=>walkRadio(instance, target, 1);\n        }\n    },\n    Backspace: (event, target, instance)=>{\n        if (isEditable(target)) {\n            return ()=>{\n                input(instance, target, '', 'deleteContentBackward');\n            };\n        }\n    },\n    Delete: (event, target, instance)=>{\n        if (isEditable(target)) {\n            return ()=>{\n                input(instance, target, '', 'deleteContentForward');\n            };\n        }\n    },\n    End: (event, target)=>{\n        if (isElementType(target, [\n            'input',\n            'textarea'\n        ]) || isContentEditable(target)) {\n            return ()=>{\n                var ref;\n                var ref1;\n                const newPos = (ref1 = (ref = getValueOrTextContent(target)) === null || ref === void 0 ? void 0 : ref.length) !== null && ref1 !== void 0 ? ref1 : /* istanbul ignore next */ 0;\n                setSelectionRange(target, newPos, newPos);\n            };\n        }\n    },\n    Home: (event, target)=>{\n        if (isElementType(target, [\n            'input',\n            'textarea'\n        ]) || isContentEditable(target)) {\n            return ()=>{\n                setSelectionRange(target, 0, 0);\n            };\n        }\n    },\n    PageDown: (event, target)=>{\n        if (isElementType(target, [\n            'input'\n        ])) {\n            return ()=>{\n                const newPos = getUIValue(target).length;\n                setSelectionRange(target, newPos, newPos);\n            };\n        }\n    },\n    PageUp: (event, target)=>{\n        if (isElementType(target, [\n            'input'\n        ])) {\n            return ()=>{\n                setSelectionRange(target, 0, 0);\n            };\n        }\n    },\n    Tab: (event, target, instance)=>{\n        return ()=>{\n            const dest = getTabDestination(target, instance.system.keyboard.modifiers.Shift);\n            focusElement(dest);\n            if (hasOwnSelection(dest)) {\n                setUISelection(dest, {\n                    anchorOffset: 0,\n                    focusOffset: dest.value.length\n                });\n            }\n        };\n    }\n};\nconst combinationBehavior = (event, target, instance)=>{\n    if (event.code === 'KeyA' && instance.system.keyboard.modifiers.Control) {\n        return ()=>selectAll(target);\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}