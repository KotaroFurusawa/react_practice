{"ast":null,"code":"import { setUISelection } from '../../document/UI.js';\nimport '../../utils/click/isClickableInput.js';\nimport '../../utils/dataTransfer/Clipboard.js';\nimport '../../utils/edit/isEditable.js';\nimport '../../utils/edit/maxLength.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../../utils/keyDef/readNextDescriptor.js';\nimport '../../utils/misc/level.js';\nimport '../../options.js';\nimport { getTargetTypeAndSelection } from './getTargetTypeAndSelection.js';\n\n/**\n * Set the selection\n */\nfunction setSelection(_ref) {\n  let {\n    focusNode,\n    focusOffset,\n    anchorNode = focusNode,\n    anchorOffset = focusOffset\n  } = _ref;\n  var ref, ref1;\n  const typeAndSelection = getTargetTypeAndSelection(focusNode);\n  if (typeAndSelection.type === 'input') {\n    return setUISelection(focusNode, {\n      anchorOffset,\n      focusOffset\n    });\n  }\n  (ref1 = (ref = anchorNode.ownerDocument) === null || ref === void 0 ? void 0 : ref.getSelection()) === null || ref1 === void 0 ? void 0 : ref1.setBaseAndExtent(anchorNode, anchorOffset, focusNode, focusOffset);\n}\nexport { setSelection };","map":{"version":3,"names":["setUISelection","getTargetTypeAndSelection","setSelection","focusNode","focusOffset","anchorNode","anchorOffset","ref","ref1","typeAndSelection","type","ownerDocument","getSelection","setBaseAndExtent"],"sources":["/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/19_test/node_modules/@testing-library/user-event/dist/esm/event/selection/setSelection.js"],"sourcesContent":["import { setUISelection } from '../../document/UI.js';\nimport '../../utils/click/isClickableInput.js';\nimport '../../utils/dataTransfer/Clipboard.js';\nimport '../../utils/edit/isEditable.js';\nimport '../../utils/edit/maxLength.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../../utils/keyDef/readNextDescriptor.js';\nimport '../../utils/misc/level.js';\nimport '../../options.js';\nimport { getTargetTypeAndSelection } from './getTargetTypeAndSelection.js';\n\n/**\n * Set the selection\n */ function setSelection({ focusNode , focusOffset , anchorNode =focusNode , anchorOffset =focusOffset  }) {\n    var ref, ref1;\n    const typeAndSelection = getTargetTypeAndSelection(focusNode);\n    if (typeAndSelection.type === 'input') {\n        return setUISelection(focusNode, {\n            anchorOffset,\n            focusOffset\n        });\n    }\n    (ref1 = (ref = anchorNode.ownerDocument) === null || ref === void 0 ? void 0 : ref.getSelection()) === null || ref1 === void 0 ? void 0 : ref1.setBaseAndExtent(anchorNode, anchorOffset, focusNode, focusOffset);\n}\n\nexport { setSelection };\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,sBAAsB;AACrD,OAAO,uCAAuC;AAC9C,OAAO,uCAAuC;AAC9C,OAAO,gCAAgC;AACvC,OAAO,+BAA+B;AACtC,OAAO,sCAAsC;AAC7C,OAAO,0CAA0C;AACjD,OAAO,2BAA2B;AAClC,OAAO,kBAAkB;AACzB,SAASC,yBAAyB,QAAQ,gCAAgC;;AAE1E;AACA;AACA;AAAI,SAASC,YAAY,OAAmF;EAAA,IAAlF;IAAEC,SAAS;IAAGC,WAAW;IAAGC,UAAU,GAAEF,SAAS;IAAGG,YAAY,GAAEF;EAAa,CAAC;EACtG,IAAIG,GAAG,EAAEC,IAAI;EACb,MAAMC,gBAAgB,GAAGR,yBAAyB,CAACE,SAAS,CAAC;EAC7D,IAAIM,gBAAgB,CAACC,IAAI,KAAK,OAAO,EAAE;IACnC,OAAOV,cAAc,CAACG,SAAS,EAAE;MAC7BG,YAAY;MACZF;IACJ,CAAC,CAAC;EACN;EACA,CAACI,IAAI,GAAG,CAACD,GAAG,GAAGF,UAAU,CAACM,aAAa,MAAM,IAAI,IAAIJ,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,GAAG,CAACK,YAAY,EAAE,MAAM,IAAI,IAAIJ,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACK,gBAAgB,CAACR,UAAU,EAAEC,YAAY,EAAEH,SAAS,EAAEC,WAAW,CAAC;AACrN;AAEA,SAASF,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}