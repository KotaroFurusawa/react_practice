{"ast":null,"code":"var _jsxFileName = \"/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/19_test/src/055_practice_userEvent/start/components/Message.test.js\";\nimport { render, screen } from \"@testing-library/react\";\nimport Message from \"./Message\";\nimport userEvent from \"@testing-library/user-event\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndescribe('Messageコンポーネントの動作確認', () => {\n  describe('初期表示の正常性確認', () => {\n    test('input要素が存在', () => {\n      render( /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 20\n      }, this));\n      const inputEl = screen.getByRole('textbox');\n      expect(inputEl).toBeInTheDocument();\n    });\n  });\n  describe('画面操作正常性確認', () => {\n    test('入力値の変更 > 反映', async () => {\n      const user = userEvent.setup();\n      render( /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this));\n      const inputEl = screen.getByRole('textbox');\n      await user.type(inputEl, \"こんにちは\");\n      expect(inputEl.value).toBe(\"こんにちは\");\n    });\n  });\n});","map":{"version":3,"names":["render","screen","Message","userEvent","describe","test","inputEl","getByRole","expect","toBeInTheDocument","user","setup","type","value","toBe"],"sources":["/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/19_test/src/055_practice_userEvent/start/components/Message.test.js"],"sourcesContent":["import { render, screen } from \"@testing-library/react\";\nimport Message from \"./Message\";\nimport userEvent from \"@testing-library/user-event\";\n\ndescribe('Messageコンポーネントの動作確認',()=>{\n    describe('初期表示の正常性確認',()=>{\n        test('input要素が存在',()=>{\n            render(<Message />);\n            const inputEl = screen.getByRole('textbox');\n            expect(inputEl).toBeInTheDocument();\n        })\n    })\n\n    describe('画面操作正常性確認',()=>{\n        test('入力値の変更 > 反映', async ()=>{\n            const user = userEvent.setup();\n            render(<Message />);\n            const inputEl = screen.getByRole('textbox');\n\n            await user.type(inputEl, \"こんにちは\");\n\n            expect(inputEl.value).toBe(\"こんにちは\");\n        })\n    })\n})"],"mappings":";AAAA,SAASA,MAAM,EAAEC,MAAM,QAAQ,wBAAwB;AACvD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,6BAA6B;AAAC;AAEpDC,QAAQ,CAAC,qBAAqB,EAAC,MAAI;EAC/BA,QAAQ,CAAC,YAAY,EAAC,MAAI;IACtBC,IAAI,CAAC,YAAY,EAAC,MAAI;MAClBL,MAAM,eAAC,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG,CAAC;MACnB,MAAMM,OAAO,GAAGL,MAAM,CAACM,SAAS,CAAC,SAAS,CAAC;MAC3CC,MAAM,CAACF,OAAO,CAAC,CAACG,iBAAiB,EAAE;IACvC,CAAC,CAAC;EACN,CAAC,CAAC;EAEFL,QAAQ,CAAC,WAAW,EAAC,MAAI;IACrBC,IAAI,CAAC,aAAa,EAAE,YAAU;MAC1B,MAAMK,IAAI,GAAGP,SAAS,CAACQ,KAAK,EAAE;MAC9BX,MAAM,eAAC,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG,CAAC;MACnB,MAAMM,OAAO,GAAGL,MAAM,CAACM,SAAS,CAAC,SAAS,CAAC;MAE3C,MAAMG,IAAI,CAACE,IAAI,CAACN,OAAO,EAAE,OAAO,CAAC;MAEjCE,MAAM,CAACF,OAAO,CAACO,KAAK,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC;IACvC,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}