{"ast":null,"code":"import { prepareDocument } from '../document/prepareDocument.js';\nimport { dispatchEvent, dispatchUIEvent } from '../event/dispatchEvent.js';\nimport '../utils/click/isClickableInput.js';\nimport { attachClipboardStubToView } from '../utils/dataTransfer/Clipboard.js';\nimport '../utils/edit/isEditable.js';\nimport '../utils/edit/maxLength.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../utils/keyDef/readNextDescriptor.js';\nimport { getDocumentFromNode } from '../utils/misc/getDocumentFromNode.js';\nimport { setLevelRef, ApiLevel } from '../utils/misc/level.js';\nimport { wait } from '../utils/misc/wait.js';\nimport { PointerEventsCheckLevel } from '../options.js';\nimport '@testing-library/dom';\nimport { defaultKeyMap } from '../keyboard/keyMap.js';\nimport { defaultKeyMap as defaultKeyMap$1 } from '../pointer/keyMap.js';\nimport { System } from '../system/index.js';\nimport * as api from './api.js';\nimport { wrapAsync } from './wrapAsync.js';\n\n/**\n * Default options applied when API is called per `userEvent.anyApi()`\n */\nconst defaultOptionsDirect = {\n  applyAccept: true,\n  autoModify: true,\n  delay: 0,\n  document: globalThis.document,\n  keyboardMap: defaultKeyMap,\n  pointerMap: defaultKeyMap$1,\n  pointerEventsCheck: PointerEventsCheckLevel.EachApiCall,\n  skipAutoClose: false,\n  skipClick: false,\n  skipHover: false,\n  writeToClipboard: false,\n  advanceTimers: () => Promise.resolve()\n};\n/**\n * Default options applied when API is called per `userEvent().anyApi()`\n */\nconst defaultOptionsSetup = {\n  ...defaultOptionsDirect,\n  writeToClipboard: true\n};\nfunction createConfig() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptionsSetup;\n  let node = arguments.length > 2 ? arguments[2] : undefined;\n  const document = getDocument(options, node, defaults);\n  return {\n    ...defaults,\n    ...options,\n    document\n  };\n}\n/**\n * Start a \"session\" with userEvent.\n * All APIs returned by this function share an input device state and a default configuration.\n */\nfunction setupMain() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const config = createConfig(options);\n  prepareDocument(config.document);\n  var _defaultView;\n  const view = (_defaultView = config.document.defaultView) !== null && _defaultView !== void 0 ? _defaultView : /* istanbul ignore next */globalThis.window;\n  attachClipboardStubToView(view);\n  return createInstance(config).api;\n}\n/**\n * Setup in direct call per `userEvent.anyApi()`\n */\nfunction setupDirect() {\n  let {\n    keyboardState,\n    pointerState,\n    ...options\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let node = arguments.length > 1 ? arguments[1] : undefined;\n  const config = createConfig(options, defaultOptionsDirect, node);\n  prepareDocument(config.document);\n  var ref;\n  const system = (ref = pointerState !== null && pointerState !== void 0 ? pointerState : keyboardState) !== null && ref !== void 0 ? ref : new System();\n  return {\n    api: createInstance(config, system).api,\n    system\n  };\n}\n/**\n * Create a set of callbacks with different default settings but the same state.\n */\nfunction setupSub(options) {\n  return createInstance({\n    ...this.config,\n    ...options\n  }, this.system).api;\n}\nfunction wrapAndBindImpl(instance, impl) {\n  function method() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    setLevelRef(instance, ApiLevel.Call);\n    return wrapAsync(() => impl.apply(instance, args).then(async ret => {\n      await wait(instance.config);\n      return ret;\n    }));\n  }\n  Object.defineProperty(method, 'name', {\n    get: () => impl.name\n  });\n  return method;\n}\nfunction createInstance(config) {\n  let system = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new System();\n  const instance = {};\n  Object.assign(instance, {\n    config,\n    dispatchEvent: dispatchEvent.bind(instance),\n    dispatchUIEvent: dispatchUIEvent.bind(instance),\n    system,\n    levelRefs: {},\n    ...api\n  });\n  return {\n    instance,\n    api: {\n      ...Object.fromEntries(Object.entries(api).map(_ref => {\n        let [name, api] = _ref;\n        return [name, wrapAndBindImpl(instance, api)];\n      })),\n      setup: setupSub.bind(instance)\n    }\n  };\n}\nfunction getDocument(options, node, defaults) {\n  var _document, ref;\n  return (ref = (_document = options.document) !== null && _document !== void 0 ? _document : node && getDocumentFromNode(node)) !== null && ref !== void 0 ? ref : defaults.document;\n}\nexport { createConfig, createInstance, setupDirect, setupMain, setupSub };","map":{"version":3,"names":["prepareDocument","dispatchEvent","dispatchUIEvent","attachClipboardStubToView","getDocumentFromNode","setLevelRef","ApiLevel","wait","PointerEventsCheckLevel","defaultKeyMap","defaultKeyMap$1","System","api","wrapAsync","defaultOptionsDirect","applyAccept","autoModify","delay","document","globalThis","keyboardMap","pointerMap","pointerEventsCheck","EachApiCall","skipAutoClose","skipClick","skipHover","writeToClipboard","advanceTimers","Promise","resolve","defaultOptionsSetup","createConfig","options","defaults","node","getDocument","setupMain","config","_defaultView","view","defaultView","window","createInstance","setupDirect","keyboardState","pointerState","ref","system","setupSub","wrapAndBindImpl","instance","impl","method","args","Call","apply","then","ret","Object","defineProperty","get","name","assign","bind","levelRefs","fromEntries","entries","map","setup","_document"],"sources":["/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/19_test/node_modules/@testing-library/user-event/dist/esm/setup/setup.js"],"sourcesContent":["import { prepareDocument } from '../document/prepareDocument.js';\nimport { dispatchEvent, dispatchUIEvent } from '../event/dispatchEvent.js';\nimport '../utils/click/isClickableInput.js';\nimport { attachClipboardStubToView } from '../utils/dataTransfer/Clipboard.js';\nimport '../utils/edit/isEditable.js';\nimport '../utils/edit/maxLength.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../utils/keyDef/readNextDescriptor.js';\nimport { getDocumentFromNode } from '../utils/misc/getDocumentFromNode.js';\nimport { setLevelRef, ApiLevel } from '../utils/misc/level.js';\nimport { wait } from '../utils/misc/wait.js';\nimport { PointerEventsCheckLevel } from '../options.js';\nimport '@testing-library/dom';\nimport { defaultKeyMap } from '../keyboard/keyMap.js';\nimport { defaultKeyMap as defaultKeyMap$1 } from '../pointer/keyMap.js';\nimport { System } from '../system/index.js';\nimport * as api from './api.js';\nimport { wrapAsync } from './wrapAsync.js';\n\n/**\n * Default options applied when API is called per `userEvent.anyApi()`\n */ const defaultOptionsDirect = {\n    applyAccept: true,\n    autoModify: true,\n    delay: 0,\n    document: globalThis.document,\n    keyboardMap: defaultKeyMap,\n    pointerMap: defaultKeyMap$1,\n    pointerEventsCheck: PointerEventsCheckLevel.EachApiCall,\n    skipAutoClose: false,\n    skipClick: false,\n    skipHover: false,\n    writeToClipboard: false,\n    advanceTimers: ()=>Promise.resolve()\n};\n/**\n * Default options applied when API is called per `userEvent().anyApi()`\n */ const defaultOptionsSetup = {\n    ...defaultOptionsDirect,\n    writeToClipboard: true\n};\nfunction createConfig(options = {}, defaults = defaultOptionsSetup, node) {\n    const document = getDocument(options, node, defaults);\n    return {\n        ...defaults,\n        ...options,\n        document\n    };\n}\n/**\n * Start a \"session\" with userEvent.\n * All APIs returned by this function share an input device state and a default configuration.\n */ function setupMain(options = {}) {\n    const config = createConfig(options);\n    prepareDocument(config.document);\n    var _defaultView;\n    const view = (_defaultView = config.document.defaultView) !== null && _defaultView !== void 0 ? _defaultView : /* istanbul ignore next */ globalThis.window;\n    attachClipboardStubToView(view);\n    return createInstance(config).api;\n}\n/**\n * Setup in direct call per `userEvent.anyApi()`\n */ function setupDirect({ keyboardState , pointerState , ...options } = {}, node) {\n    const config = createConfig(options, defaultOptionsDirect, node);\n    prepareDocument(config.document);\n    var ref;\n    const system = (ref = pointerState !== null && pointerState !== void 0 ? pointerState : keyboardState) !== null && ref !== void 0 ? ref : new System();\n    return {\n        api: createInstance(config, system).api,\n        system\n    };\n}\n/**\n * Create a set of callbacks with different default settings but the same state.\n */ function setupSub(options) {\n    return createInstance({\n        ...this.config,\n        ...options\n    }, this.system).api;\n}\nfunction wrapAndBindImpl(instance, impl) {\n    function method(...args) {\n        setLevelRef(instance, ApiLevel.Call);\n        return wrapAsync(()=>impl.apply(instance, args).then(async (ret)=>{\n                await wait(instance.config);\n                return ret;\n            }));\n    }\n    Object.defineProperty(method, 'name', {\n        get: ()=>impl.name\n    });\n    return method;\n}\nfunction createInstance(config, system = new System()) {\n    const instance = {};\n    Object.assign(instance, {\n        config,\n        dispatchEvent: dispatchEvent.bind(instance),\n        dispatchUIEvent: dispatchUIEvent.bind(instance),\n        system,\n        levelRefs: {},\n        ...api\n    });\n    return {\n        instance,\n        api: {\n            ...Object.fromEntries(Object.entries(api).map(([name, api])=>[\n                    name,\n                    wrapAndBindImpl(instance, api), \n                ])),\n            setup: setupSub.bind(instance)\n        }\n    };\n}\nfunction getDocument(options, node, defaults) {\n    var _document, ref;\n    return (ref = (_document = options.document) !== null && _document !== void 0 ? _document : node && getDocumentFromNode(node)) !== null && ref !== void 0 ? ref : defaults.document;\n}\n\nexport { createConfig, createInstance, setupDirect, setupMain, setupSub };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}