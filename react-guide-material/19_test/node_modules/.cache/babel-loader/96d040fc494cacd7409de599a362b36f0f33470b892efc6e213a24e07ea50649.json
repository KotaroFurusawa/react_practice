{"ast":null,"code":"import '../../event/behavior/click.js';\nimport '../../event/behavior/cut.js';\nimport '../../event/behavior/keydown.js';\nimport '../../event/behavior/keypress.js';\nimport '../../event/behavior/keyup.js';\nimport '../../event/behavior/paste.js';\nimport '@testing-library/dom';\nimport '../../event/eventMap.js';\nimport '../../utils/click/isClickableInput.js';\nimport '../../utils/dataTransfer/Clipboard.js';\nimport '../../utils/edit/isEditable.js';\nimport '../../utils/edit/maxLength.js';\nimport { isDisabled } from '../../utils/misc/isDisabled.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../../utils/keyDef/readNextDescriptor.js';\nimport { getTreeDiff } from '../../utils/misc/getTreeDiff.js';\nimport '../../utils/misc/level.js';\nimport '../../options.js';\nimport { focusElement } from '../../event/focus.js';\nimport { setSelectionPerMouseDown } from '../../event/selection/setSelectionPerMouse.js';\nimport { modifySelectionPerMouseMove } from '../../event/selection/modifySelectionPerMouse.js';\nimport { getMouseEventButton, Buttons } from './buttons.js';\nimport { isDifferentPointerPosition } from './shared.js';\n\n/**\n * This object is the single \"virtual\" mouse that might be controlled by multiple different pointer devices.\n */\nclass Mouse {\n  move(instance, position) {\n    const prevPosition = this.position;\n    const prevTarget = this.getTarget(instance);\n    this.position = position;\n    if (!isDifferentPointerPosition(prevPosition, position)) {\n      return;\n    }\n    const nextTarget = this.getTarget(instance);\n    const init = this.getEventInit('mousemove');\n    const [leave, enter] = getTreeDiff(prevTarget, nextTarget);\n    return {\n      leave: () => {\n        if (prevTarget !== nextTarget) {\n          instance.dispatchUIEvent(prevTarget, 'mouseout', init);\n          leave.forEach(el => instance.dispatchUIEvent(el, 'mouseleave', init));\n        }\n      },\n      enter: () => {\n        if (prevTarget !== nextTarget) {\n          instance.dispatchUIEvent(nextTarget, 'mouseover', init);\n          enter.forEach(el => instance.dispatchUIEvent(el, 'mouseenter', init));\n        }\n      },\n      move: () => {\n        instance.dispatchUIEvent(nextTarget, 'mousemove', init);\n        this.modifySelecting(instance);\n      }\n    };\n  }\n  down(instance, keyDef, pointer) {\n    const button = this.buttons.down(keyDef);\n    if (button === undefined) {\n      return;\n    }\n    const target = this.getTarget(instance);\n    this.buttonDownTarget[button] = target;\n    const disabled = isDisabled(target);\n    const init = this.getEventInit('mousedown', keyDef.button);\n    if (disabled || instance.dispatchUIEvent(target, 'mousedown', init)) {\n      this.startSelecting(instance, init.detail);\n      focusElement(target);\n    }\n    if (!disabled && getMouseEventButton(keyDef.button) === 2) {\n      instance.dispatchUIEvent(target, 'contextmenu', this.getEventInit('contextmenu', keyDef.button, pointer));\n    }\n  }\n  up(instance, keyDef, pointer) {\n    const button = this.buttons.up(keyDef);\n    if (button === undefined) {\n      return;\n    }\n    const target = this.getTarget(instance);\n    if (!isDisabled(target)) {\n      instance.dispatchUIEvent(target, 'mouseup', this.getEventInit('mouseup', keyDef.button));\n      this.endSelecting();\n      const clickTarget = getTreeDiff(this.buttonDownTarget[button], target)[2][0];\n      if (clickTarget) {\n        const init = this.getEventInit('click', keyDef.button, pointer);\n        if (init.detail) {\n          instance.dispatchUIEvent(clickTarget, init.button === 0 ? 'click' : 'auxclick', init);\n          if (init.button === 0 && init.detail === 2) {\n            instance.dispatchUIEvent(clickTarget, 'dblclick', {\n              ...this.getEventInit('dblclick', keyDef.button),\n              detail: init.detail\n            });\n          }\n        }\n      }\n    }\n  }\n  resetClickCount() {\n    this.clickCount.reset();\n  }\n  getEventInit(type, button, pointer) {\n    const init = {\n      ...this.position.coords\n    };\n    if (pointer) {\n      init.pointerId = pointer.pointerId;\n      init.pointerType = pointer.pointerType;\n      init.isPrimary = pointer.isPrimary;\n    }\n    init.button = getMouseEventButton(button);\n    init.buttons = this.buttons.getButtons();\n    if (type === 'mousedown') {\n      init.detail = this.clickCount.getOnDown(init.button);\n    } else if (type === 'mouseup') {\n      init.detail = this.clickCount.getOnUp(init.button);\n    } else if (type === 'click' || type === 'auxclick') {\n      init.detail = this.clickCount.incOnClick(init.button);\n    }\n    return init;\n  }\n  getTarget(instance) {\n    var _target;\n    return (_target = this.position.target) !== null && _target !== void 0 ? _target : instance.config.document.body;\n  }\n  startSelecting(instance, clickCount) {\n    var ref, ref1;\n    // TODO: support extending range (shift)\n    this.selecting = setSelectionPerMouseDown({\n      document: instance.config.document,\n      target: this.getTarget(instance),\n      node: (ref = this.position.caret) === null || ref === void 0 ? void 0 : ref.node,\n      offset: (ref1 = this.position.caret) === null || ref1 === void 0 ? void 0 : ref1.offset,\n      clickCount\n    });\n  }\n  modifySelecting(instance) {\n    var ref, ref1;\n    if (!this.selecting) {\n      return;\n    }\n    modifySelectionPerMouseMove(this.selecting, {\n      document: instance.config.document,\n      target: this.getTarget(instance),\n      node: (ref = this.position.caret) === null || ref === void 0 ? void 0 : ref.node,\n      offset: (ref1 = this.position.caret) === null || ref1 === void 0 ? void 0 : ref1.offset\n    });\n  }\n  endSelecting() {\n    this.selecting = undefined;\n  }\n  constructor() {\n    this.position = {};\n    this.buttons = new Buttons();\n    this.buttonDownTarget = {};\n    // According to spec the `detail` on click events should be the number\n    // of *consecutive* clicks with a specific button.\n    // On `mousedown` and `mouseup` it should be this number increased by one.\n    // But the browsers don't implement it this way.\n    // If another button is pressed,\n    //   in Webkit: the `mouseup` on the previously pressed button has `detail: 0` and no `click`/`auxclick`.\n    //   in Gecko: the `mouseup` and click events have the same detail as the `mousedown`.\n    // If there is a delay while a button is pressed,\n    // the `mouseup` and `click` are normal, but a following `mousedown` starts a new click count.\n    // We'll follow the minimal implementation of Webkit.\n    this.clickCount = new class {\n      incOnClick(button) {\n        const current = this.down[button] === undefined ? undefined : Number(this.down[button]) + 1;\n        this.count = this.count[button] === undefined ? {} : {\n          [button]: Number(this.count[button]) + 1\n        };\n        return current;\n      }\n      getOnDown(button) {\n        var _button;\n        this.down = {\n          [button]: (_button = this.count[button]) !== null && _button !== void 0 ? _button : 0\n        };\n        var _button1;\n        this.count = {\n          [button]: (_button1 = this.count[button]) !== null && _button1 !== void 0 ? _button1 : 0\n        };\n        return Number(this.count[button]) + 1;\n      }\n      getOnUp(button) {\n        return this.down[button] === undefined ? undefined : Number(this.down[button]) + 1;\n      }\n      reset() {\n        this.count = {};\n      }\n      constructor() {\n        this.down = {};\n        this.count = {};\n      }\n    }();\n  }\n}\nexport { Mouse };","map":{"version":3,"names":["isDisabled","getTreeDiff","focusElement","setSelectionPerMouseDown","modifySelectionPerMouseMove","getMouseEventButton","Buttons","isDifferentPointerPosition","Mouse","move","instance","position","prevPosition","prevTarget","getTarget","nextTarget","init","getEventInit","leave","enter","dispatchUIEvent","forEach","el","modifySelecting","down","keyDef","pointer","button","buttons","undefined","target","buttonDownTarget","disabled","startSelecting","detail","up","endSelecting","clickTarget","resetClickCount","clickCount","reset","type","coords","pointerId","pointerType","isPrimary","getButtons","getOnDown","getOnUp","incOnClick","_target","config","document","body","ref","ref1","selecting","node","caret","offset","constructor","current","Number","count","_button","_button1"],"sources":["/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/19_test/node_modules/@testing-library/user-event/dist/esm/system/pointer/mouse.js"],"sourcesContent":["import '../../event/behavior/click.js';\nimport '../../event/behavior/cut.js';\nimport '../../event/behavior/keydown.js';\nimport '../../event/behavior/keypress.js';\nimport '../../event/behavior/keyup.js';\nimport '../../event/behavior/paste.js';\nimport '@testing-library/dom';\nimport '../../event/eventMap.js';\nimport '../../utils/click/isClickableInput.js';\nimport '../../utils/dataTransfer/Clipboard.js';\nimport '../../utils/edit/isEditable.js';\nimport '../../utils/edit/maxLength.js';\nimport { isDisabled } from '../../utils/misc/isDisabled.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../../utils/keyDef/readNextDescriptor.js';\nimport { getTreeDiff } from '../../utils/misc/getTreeDiff.js';\nimport '../../utils/misc/level.js';\nimport '../../options.js';\nimport { focusElement } from '../../event/focus.js';\nimport { setSelectionPerMouseDown } from '../../event/selection/setSelectionPerMouse.js';\nimport { modifySelectionPerMouseMove } from '../../event/selection/modifySelectionPerMouse.js';\nimport { getMouseEventButton, Buttons } from './buttons.js';\nimport { isDifferentPointerPosition } from './shared.js';\n\n/**\n * This object is the single \"virtual\" mouse that might be controlled by multiple different pointer devices.\n */ class Mouse {\n    move(instance, position) {\n        const prevPosition = this.position;\n        const prevTarget = this.getTarget(instance);\n        this.position = position;\n        if (!isDifferentPointerPosition(prevPosition, position)) {\n            return;\n        }\n        const nextTarget = this.getTarget(instance);\n        const init = this.getEventInit('mousemove');\n        const [leave, enter] = getTreeDiff(prevTarget, nextTarget);\n        return {\n            leave: ()=>{\n                if (prevTarget !== nextTarget) {\n                    instance.dispatchUIEvent(prevTarget, 'mouseout', init);\n                    leave.forEach((el)=>instance.dispatchUIEvent(el, 'mouseleave', init));\n                }\n            },\n            enter: ()=>{\n                if (prevTarget !== nextTarget) {\n                    instance.dispatchUIEvent(nextTarget, 'mouseover', init);\n                    enter.forEach((el)=>instance.dispatchUIEvent(el, 'mouseenter', init));\n                }\n            },\n            move: ()=>{\n                instance.dispatchUIEvent(nextTarget, 'mousemove', init);\n                this.modifySelecting(instance);\n            }\n        };\n    }\n    down(instance, keyDef, pointer) {\n        const button = this.buttons.down(keyDef);\n        if (button === undefined) {\n            return;\n        }\n        const target = this.getTarget(instance);\n        this.buttonDownTarget[button] = target;\n        const disabled = isDisabled(target);\n        const init = this.getEventInit('mousedown', keyDef.button);\n        if (disabled || instance.dispatchUIEvent(target, 'mousedown', init)) {\n            this.startSelecting(instance, init.detail);\n            focusElement(target);\n        }\n        if (!disabled && getMouseEventButton(keyDef.button) === 2) {\n            instance.dispatchUIEvent(target, 'contextmenu', this.getEventInit('contextmenu', keyDef.button, pointer));\n        }\n    }\n    up(instance, keyDef, pointer) {\n        const button = this.buttons.up(keyDef);\n        if (button === undefined) {\n            return;\n        }\n        const target = this.getTarget(instance);\n        if (!isDisabled(target)) {\n            instance.dispatchUIEvent(target, 'mouseup', this.getEventInit('mouseup', keyDef.button));\n            this.endSelecting();\n            const clickTarget = getTreeDiff(this.buttonDownTarget[button], target)[2][0];\n            if (clickTarget) {\n                const init = this.getEventInit('click', keyDef.button, pointer);\n                if (init.detail) {\n                    instance.dispatchUIEvent(clickTarget, init.button === 0 ? 'click' : 'auxclick', init);\n                    if (init.button === 0 && init.detail === 2) {\n                        instance.dispatchUIEvent(clickTarget, 'dblclick', {\n                            ...this.getEventInit('dblclick', keyDef.button),\n                            detail: init.detail\n                        });\n                    }\n                }\n            }\n        }\n    }\n    resetClickCount() {\n        this.clickCount.reset();\n    }\n    getEventInit(type, button, pointer) {\n        const init = {\n            ...this.position.coords\n        };\n        if (pointer) {\n            init.pointerId = pointer.pointerId;\n            init.pointerType = pointer.pointerType;\n            init.isPrimary = pointer.isPrimary;\n        }\n        init.button = getMouseEventButton(button);\n        init.buttons = this.buttons.getButtons();\n        if (type === 'mousedown') {\n            init.detail = this.clickCount.getOnDown(init.button);\n        } else if (type === 'mouseup') {\n            init.detail = this.clickCount.getOnUp(init.button);\n        } else if (type === 'click' || type === 'auxclick') {\n            init.detail = this.clickCount.incOnClick(init.button);\n        }\n        return init;\n    }\n    getTarget(instance) {\n        var _target;\n        return (_target = this.position.target) !== null && _target !== void 0 ? _target : instance.config.document.body;\n    }\n    startSelecting(instance, clickCount) {\n        var ref, ref1;\n        // TODO: support extending range (shift)\n        this.selecting = setSelectionPerMouseDown({\n            document: instance.config.document,\n            target: this.getTarget(instance),\n            node: (ref = this.position.caret) === null || ref === void 0 ? void 0 : ref.node,\n            offset: (ref1 = this.position.caret) === null || ref1 === void 0 ? void 0 : ref1.offset,\n            clickCount\n        });\n    }\n    modifySelecting(instance) {\n        var ref, ref1;\n        if (!this.selecting) {\n            return;\n        }\n        modifySelectionPerMouseMove(this.selecting, {\n            document: instance.config.document,\n            target: this.getTarget(instance),\n            node: (ref = this.position.caret) === null || ref === void 0 ? void 0 : ref.node,\n            offset: (ref1 = this.position.caret) === null || ref1 === void 0 ? void 0 : ref1.offset\n        });\n    }\n    endSelecting() {\n        this.selecting = undefined;\n    }\n    constructor(){\n        this.position = {};\n        this.buttons = new Buttons();\n        this.buttonDownTarget = {};\n        // According to spec the `detail` on click events should be the number\n        // of *consecutive* clicks with a specific button.\n        // On `mousedown` and `mouseup` it should be this number increased by one.\n        // But the browsers don't implement it this way.\n        // If another button is pressed,\n        //   in Webkit: the `mouseup` on the previously pressed button has `detail: 0` and no `click`/`auxclick`.\n        //   in Gecko: the `mouseup` and click events have the same detail as the `mousedown`.\n        // If there is a delay while a button is pressed,\n        // the `mouseup` and `click` are normal, but a following `mousedown` starts a new click count.\n        // We'll follow the minimal implementation of Webkit.\n        this.clickCount = new class {\n            incOnClick(button) {\n                const current = this.down[button] === undefined ? undefined : Number(this.down[button]) + 1;\n                this.count = this.count[button] === undefined ? {} : {\n                    [button]: Number(this.count[button]) + 1\n                };\n                return current;\n            }\n            getOnDown(button) {\n                var _button;\n                this.down = {\n                    [button]: (_button = this.count[button]) !== null && _button !== void 0 ? _button : 0\n                };\n                var _button1;\n                this.count = {\n                    [button]: (_button1 = this.count[button]) !== null && _button1 !== void 0 ? _button1 : 0\n                };\n                return Number(this.count[button]) + 1;\n            }\n            getOnUp(button) {\n                return this.down[button] === undefined ? undefined : Number(this.down[button]) + 1;\n            }\n            reset() {\n                this.count = {};\n            }\n            constructor(){\n                this.down = {};\n                this.count = {};\n            }\n        }();\n    }\n}\n\nexport { Mouse };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}