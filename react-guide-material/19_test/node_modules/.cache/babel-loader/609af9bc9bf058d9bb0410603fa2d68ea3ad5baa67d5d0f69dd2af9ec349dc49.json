{"ast":null,"code":"import { createFileList } from './FileList.js';\n\n// DataTransfer is not implemented in jsdom.\n// DataTransfer with FileList is being created by the browser on certain events.\nclass DataTransferItemStub {\n  getAsFile() {\n    return this.file;\n  }\n  getAsString(callback) {\n    if (typeof this.data === 'string') {\n      callback(this.data);\n    }\n  }\n  /* istanbul ignore next */\n  webkitGetAsEntry() {\n    throw new Error('not implemented');\n  }\n  constructor(dataOrFile, type) {\n    this.file = null;\n    this.data = undefined;\n    if (typeof dataOrFile === 'string') {\n      this.kind = 'string';\n      this.type = String(type);\n      this.data = dataOrFile;\n    } else {\n      this.kind = 'file';\n      this.type = dataOrFile.type;\n      this.file = dataOrFile;\n    }\n  }\n}\nclass DataTransferItemListStub extends Array {\n  add() {\n    const item = new DataTransferItemStub(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1]);\n    this.push(item);\n    return item;\n  }\n  clear() {\n    this.splice(0, this.length);\n  }\n  remove(index) {\n    this.splice(index, 1);\n  }\n}\nfunction getTypeMatcher(type, exact) {\n  const [group, sub] = type.split('/');\n  const isGroup = !sub || sub === '*';\n  return item => {\n    return exact ? item.type === (isGroup ? group : type) : isGroup ? item.type.startsWith(`${group}/`) : item.type === group;\n  };\n}\nfunction createDataTransferStub(window) {\n  return new class DataTransferStub {\n    getData(format) {\n      var ref;\n      const match = (ref = this.items.find(getTypeMatcher(format, true))) !== null && ref !== void 0 ? ref : this.items.find(getTypeMatcher(format, false));\n      let text = '';\n      match === null || match === void 0 ? void 0 : match.getAsString(t => {\n        text = t;\n      });\n      return text;\n    }\n    setData(format, data) {\n      const matchIndex = this.items.findIndex(getTypeMatcher(format, true));\n      const item = new DataTransferItemStub(data, format);\n      if (matchIndex >= 0) {\n        this.items.splice(matchIndex, 1, item);\n      } else {\n        this.items.push(item);\n      }\n    }\n    clearData(format) {\n      if (format) {\n        const matchIndex = this.items.findIndex(getTypeMatcher(format, true));\n        if (matchIndex >= 0) {\n          this.items.remove(matchIndex);\n        }\n      } else {\n        this.items.clear();\n      }\n    }\n    get types() {\n      const t = [];\n      if (this.files.length) {\n        t.push('Files');\n      }\n      this.items.forEach(i => t.push(i.type));\n      Object.freeze(t);\n      return t;\n    }\n    /* istanbul ignore next */\n    setDragImage() {}\n    constructor() {\n      this.dropEffect = 'none';\n      this.effectAllowed = 'uninitialized';\n      this.items = new DataTransferItemListStub();\n      this.files = createFileList(window, []);\n    }\n  }();\n}\nfunction createDataTransfer(window) {\n  let files = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  // Use real DataTransfer if available\n  const dt = typeof window.DataTransfer === 'undefined' ? createDataTransferStub(window) : /* istanbul ignore next */new window.DataTransfer();\n  Object.defineProperty(dt, 'files', {\n    get: () => createFileList(window, files)\n  });\n  return dt;\n}\nfunction getBlobFromDataTransferItem(window, item) {\n  if (item.kind === 'file') {\n    return item.getAsFile();\n  }\n  let data = '';\n  item.getAsString(s => {\n    data = s;\n  });\n  return new window.Blob([data], {\n    type: item.type\n  });\n}\nexport { createDataTransfer, getBlobFromDataTransferItem };","map":{"version":3,"names":["createFileList","DataTransferItemStub","getAsFile","file","getAsString","callback","data","webkitGetAsEntry","Error","constructor","dataOrFile","type","undefined","kind","String","DataTransferItemListStub","Array","add","item","push","clear","splice","length","remove","index","getTypeMatcher","exact","group","sub","split","isGroup","startsWith","createDataTransferStub","window","DataTransferStub","getData","format","ref","match","items","find","text","t","setData","matchIndex","findIndex","clearData","types","files","forEach","i","Object","freeze","setDragImage","dropEffect","effectAllowed","createDataTransfer","dt","DataTransfer","defineProperty","get","getBlobFromDataTransferItem","s","Blob"],"sources":["/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/19_test/node_modules/@testing-library/user-event/dist/esm/utils/dataTransfer/DataTransfer.js"],"sourcesContent":["import { createFileList } from './FileList.js';\n\n// DataTransfer is not implemented in jsdom.\n// DataTransfer with FileList is being created by the browser on certain events.\nclass DataTransferItemStub {\n    getAsFile() {\n        return this.file;\n    }\n    getAsString(callback) {\n        if (typeof this.data === 'string') {\n            callback(this.data);\n        }\n    }\n    /* istanbul ignore next */ webkitGetAsEntry() {\n        throw new Error('not implemented');\n    }\n    constructor(dataOrFile, type){\n        this.file = null;\n        this.data = undefined;\n        if (typeof dataOrFile === 'string') {\n            this.kind = 'string';\n            this.type = String(type);\n            this.data = dataOrFile;\n        } else {\n            this.kind = 'file';\n            this.type = dataOrFile.type;\n            this.file = dataOrFile;\n        }\n    }\n}\nclass DataTransferItemListStub extends Array {\n    add(...args) {\n        const item = new DataTransferItemStub(args[0], args[1]);\n        this.push(item);\n        return item;\n    }\n    clear() {\n        this.splice(0, this.length);\n    }\n    remove(index) {\n        this.splice(index, 1);\n    }\n}\nfunction getTypeMatcher(type, exact) {\n    const [group, sub] = type.split('/');\n    const isGroup = !sub || sub === '*';\n    return (item)=>{\n        return exact ? item.type === (isGroup ? group : type) : isGroup ? item.type.startsWith(`${group}/`) : item.type === group;\n    };\n}\nfunction createDataTransferStub(window) {\n    return new class DataTransferStub {\n        getData(format) {\n            var ref;\n            const match = (ref = this.items.find(getTypeMatcher(format, true))) !== null && ref !== void 0 ? ref : this.items.find(getTypeMatcher(format, false));\n            let text = '';\n            match === null || match === void 0 ? void 0 : match.getAsString((t)=>{\n                text = t;\n            });\n            return text;\n        }\n        setData(format, data) {\n            const matchIndex = this.items.findIndex(getTypeMatcher(format, true));\n            const item = new DataTransferItemStub(data, format);\n            if (matchIndex >= 0) {\n                this.items.splice(matchIndex, 1, item);\n            } else {\n                this.items.push(item);\n            }\n        }\n        clearData(format) {\n            if (format) {\n                const matchIndex = this.items.findIndex(getTypeMatcher(format, true));\n                if (matchIndex >= 0) {\n                    this.items.remove(matchIndex);\n                }\n            } else {\n                this.items.clear();\n            }\n        }\n        get types() {\n            const t = [];\n            if (this.files.length) {\n                t.push('Files');\n            }\n            this.items.forEach((i)=>t.push(i.type));\n            Object.freeze(t);\n            return t;\n        }\n        /* istanbul ignore next */ setDragImage() {}\n        constructor(){\n            this.dropEffect = 'none';\n            this.effectAllowed = 'uninitialized';\n            this.items = new DataTransferItemListStub();\n            this.files = createFileList(window, []);\n        }\n    }();\n}\nfunction createDataTransfer(window, files = []) {\n    // Use real DataTransfer if available\n    const dt = typeof window.DataTransfer === 'undefined' ? createDataTransferStub(window) : /* istanbul ignore next */ new window.DataTransfer();\n    Object.defineProperty(dt, 'files', {\n        get: ()=>createFileList(window, files)\n    });\n    return dt;\n}\nfunction getBlobFromDataTransferItem(window, item) {\n    if (item.kind === 'file') {\n        return item.getAsFile();\n    }\n    let data = '';\n    item.getAsString((s)=>{\n        data = s;\n    });\n    return new window.Blob([\n        data\n    ], {\n        type: item.type\n    });\n}\n\nexport { createDataTransfer, getBlobFromDataTransferItem };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}