{"ast":null,"code":"const UIValue = Symbol('Displayed value in UI');\nconst UISelection = Symbol('Displayed selection in UI');\nconst InitialValue = Symbol('Initial value to compare on blur');\nfunction isUIValue(value) {\n  return typeof value === 'object' && UIValue in value;\n}\nfunction isUISelectionStart(start) {\n  return !!start && typeof start === 'object' && UISelection in start;\n}\nfunction setUIValue(element, value) {\n  if (element[InitialValue] === undefined) {\n    element[InitialValue] = element.value;\n  }\n  element[UIValue] = value;\n  // eslint-disable-next-line no-new-wrappers\n  element.value = Object.assign(new String(value), {\n    [UIValue]: true\n  });\n}\nfunction getUIValue(element) {\n  return element[UIValue] === undefined ? element.value : String(element[UIValue]);\n}\n/** Flag the IDL value as clean. This does not change the value.*/\nfunction setUIValueClean(element) {\n  element[UIValue] = undefined;\n}\nfunction clearInitialValue(element) {\n  element[InitialValue] = undefined;\n}\nfunction getInitialValue(element) {\n  return element[InitialValue];\n}\nfunction setUISelectionRaw(element, selection) {\n  element[UISelection] = selection;\n}\nfunction setUISelection(element, _ref) {\n  let {\n    focusOffset: focusOffsetParam,\n    anchorOffset: anchorOffsetParam = focusOffsetParam\n  } = _ref;\n  let mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'replace';\n  const valueLength = getUIValue(element).length;\n  const sanitizeOffset = o => Math.max(0, Math.min(valueLength, o));\n  const anchorOffset = mode === 'replace' || element[UISelection] === undefined ? sanitizeOffset(anchorOffsetParam) : element[UISelection].anchorOffset;\n  const focusOffset = sanitizeOffset(focusOffsetParam);\n  const startOffset = Math.min(anchorOffset, focusOffset);\n  const endOffset = Math.max(anchorOffset, focusOffset);\n  element[UISelection] = {\n    anchorOffset,\n    focusOffset\n  };\n  if (element.selectionStart === startOffset && element.selectionEnd === endOffset) {\n    return;\n  }\n  // eslint-disable-next-line no-new-wrappers\n  const startObj = Object.assign(new Number(startOffset), {\n    [UISelection]: true\n  });\n  try {\n    element.setSelectionRange(startObj, endOffset);\n  } catch {\n    // DOMException for invalid state is expected when calling this\n    // on an element without support for setSelectionRange\n  }\n}\nfunction getUISelection(element) {\n  var _selectionStart, _selectionEnd, _UISelection;\n  const sel = (_UISelection = element[UISelection]) !== null && _UISelection !== void 0 ? _UISelection : {\n    anchorOffset: (_selectionStart = element.selectionStart) !== null && _selectionStart !== void 0 ? _selectionStart : 0,\n    focusOffset: (_selectionEnd = element.selectionEnd) !== null && _selectionEnd !== void 0 ? _selectionEnd : 0\n  };\n  return {\n    ...sel,\n    startOffset: Math.min(sel.anchorOffset, sel.focusOffset),\n    endOffset: Math.max(sel.anchorOffset, sel.focusOffset)\n  };\n}\nfunction hasUISelection(element) {\n  return !!element[UISelection];\n}\n/** Flag the IDL selection as clean. This does not change the selection. */\nfunction setUISelectionClean(element) {\n  element[UISelection] = undefined;\n}\nexport { clearInitialValue, getInitialValue, getUISelection, getUIValue, hasUISelection, isUISelectionStart, isUIValue, setUISelection, setUISelectionClean, setUISelectionRaw, setUIValue, setUIValueClean };","map":{"version":3,"names":["UIValue","Symbol","UISelection","InitialValue","isUIValue","value","isUISelectionStart","start","setUIValue","element","undefined","Object","assign","String","getUIValue","setUIValueClean","clearInitialValue","getInitialValue","setUISelectionRaw","selection","setUISelection","focusOffset","focusOffsetParam","anchorOffset","anchorOffsetParam","mode","valueLength","length","sanitizeOffset","o","Math","max","min","startOffset","endOffset","selectionStart","selectionEnd","startObj","Number","setSelectionRange","getUISelection","_selectionStart","_selectionEnd","_UISelection","sel","hasUISelection","setUISelectionClean"],"sources":["/Users/furusawakoutarou/Desktop/programming/React/react-guide-material/19_test/node_modules/@testing-library/user-event/dist/esm/document/UI.js"],"sourcesContent":["const UIValue = Symbol('Displayed value in UI');\nconst UISelection = Symbol('Displayed selection in UI');\nconst InitialValue = Symbol('Initial value to compare on blur');\nfunction isUIValue(value) {\n    return typeof value === 'object' && UIValue in value;\n}\nfunction isUISelectionStart(start) {\n    return !!start && typeof start === 'object' && UISelection in start;\n}\nfunction setUIValue(element, value) {\n    if (element[InitialValue] === undefined) {\n        element[InitialValue] = element.value;\n    }\n    element[UIValue] = value;\n    // eslint-disable-next-line no-new-wrappers\n    element.value = Object.assign(new String(value), {\n        [UIValue]: true\n    });\n}\nfunction getUIValue(element) {\n    return element[UIValue] === undefined ? element.value : String(element[UIValue]);\n}\n/** Flag the IDL value as clean. This does not change the value.*/ function setUIValueClean(element) {\n    element[UIValue] = undefined;\n}\nfunction clearInitialValue(element) {\n    element[InitialValue] = undefined;\n}\nfunction getInitialValue(element) {\n    return element[InitialValue];\n}\nfunction setUISelectionRaw(element, selection) {\n    element[UISelection] = selection;\n}\nfunction setUISelection(element, { focusOffset: focusOffsetParam , anchorOffset: anchorOffsetParam = focusOffsetParam  }, mode = 'replace') {\n    const valueLength = getUIValue(element).length;\n    const sanitizeOffset = (o)=>Math.max(0, Math.min(valueLength, o));\n    const anchorOffset = mode === 'replace' || element[UISelection] === undefined ? sanitizeOffset(anchorOffsetParam) : element[UISelection].anchorOffset;\n    const focusOffset = sanitizeOffset(focusOffsetParam);\n    const startOffset = Math.min(anchorOffset, focusOffset);\n    const endOffset = Math.max(anchorOffset, focusOffset);\n    element[UISelection] = {\n        anchorOffset,\n        focusOffset\n    };\n    if (element.selectionStart === startOffset && element.selectionEnd === endOffset) {\n        return;\n    }\n    // eslint-disable-next-line no-new-wrappers\n    const startObj = Object.assign(new Number(startOffset), {\n        [UISelection]: true\n    });\n    try {\n        element.setSelectionRange(startObj, endOffset);\n    } catch  {\n    // DOMException for invalid state is expected when calling this\n    // on an element without support for setSelectionRange\n    }\n}\nfunction getUISelection(element) {\n    var _selectionStart, _selectionEnd, _UISelection;\n    const sel = (_UISelection = element[UISelection]) !== null && _UISelection !== void 0 ? _UISelection : {\n        anchorOffset: (_selectionStart = element.selectionStart) !== null && _selectionStart !== void 0 ? _selectionStart : 0,\n        focusOffset: (_selectionEnd = element.selectionEnd) !== null && _selectionEnd !== void 0 ? _selectionEnd : 0\n    };\n    return {\n        ...sel,\n        startOffset: Math.min(sel.anchorOffset, sel.focusOffset),\n        endOffset: Math.max(sel.anchorOffset, sel.focusOffset)\n    };\n}\nfunction hasUISelection(element) {\n    return !!element[UISelection];\n}\n/** Flag the IDL selection as clean. This does not change the selection. */ function setUISelectionClean(element) {\n    element[UISelection] = undefined;\n}\n\nexport { clearInitialValue, getInitialValue, getUISelection, getUIValue, hasUISelection, isUISelectionStart, isUIValue, setUISelection, setUISelectionClean, setUISelectionRaw, setUIValue, setUIValueClean };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}